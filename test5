Topics:
Postman
REST Assured
Automation Testing
REST API
Software Testing
Mobile Testing
Selenium WebDriver
Quality Assurance
Selenium Testing Framework
SoapUI
API
JMeter
Performance Testing
Automation
Jenkins
RESTful Web Services
Cypress.io
Cucumber Software
database testing-SQL

git - version control
github - web based application sit on top of GIT

in local
download git,visual studio or pycharm
config the email & username:
git config --global user.name "harinaban"
git config --global user.email "harinaban@gmail.com"
git config --list -->to view the config changes
create a folder and clone the git using 
"git clone https://github.com/harinaban/git_github.git"

for new file addition and deletion we have to use all 3 steps
git status
git restore file name -- only restore if files not  staged ie before using add .
git add filename--<add the modification to staging area
git restore --staged filename -- to unstage the files
git restore filename

git commit -m "msg for commit"--commit all the changes to local git folder
git push origin branch name---pushes to git hub

to recover deleted file
git rev-list HEAD -n 2 -- test3 -->displays 2 commit where the file last changed, select 2nd commit
git show commit -->wil display the commit action performed
git checkout 2nd commit^ filename or .
git commit -m "msg"
git push


git init --->its used to make a normal folder to git folder
git init folder name
git add .  ->to add all modification

git remote add origin https://github.com/harinaban/git_github1.git --> to add/connect the github to local
git remote add hari url
git remote -v ->displays all origin and upstream link attached to this project(verify)
git remote add upstream <upstream link which was forked>

git branch -->to display parent branch
git branch -M master -->to change main branch name before commiting anything
after that if we use git branch -M master1 then new branch will be created

git branch master2 create new branch

git branch -a --.to list all the branches

git branch -b bran_name --.to create new branches

git branch -d bran_name --.to delete branches current branch cant be deleted without switching to another branch

git checkout master1 ->to move to another branch and move the head
git checkout -b brach_name - --will create and switch to another branch

git diff master1 ->to give the difference between 2 branches,commits,files and q to exit
                    --> also to view the changes in the file in git window

git merge master1--currently at master branch

Git pullrequest only available in github,to merge from another branch where main branch merge access is not available
One pullrequest at a time is possible for a branch,all commits will be added to that PR till its merged,

For another change we need to create another branch and raise a PR

conflicts arised by pullrequest should be resolved by manually 

github1s will open the github in visual code

states
untracked - refers new file
modified - existing file changes done
staged - ready to commit
unmodified - no change aftercommit before push

git log to view the commit msg and commit history with hash
git log --oneline -show in list format

git reset commit hash-->to restore to a particular version of project(multiple commits before)
        -->this will reset only commit level changes will still be available in git status
git reset --hard upstream/main -- this will reset and evens the commits of the main branch with upstream branch
            -->this will apply the changes at code level
git reset filename ->to reset the file status before addition to staged state

git reset --> to reset multiple files
git reset HEAD~1 --> previous commit will be reseted,HEAD -> current commit,~1 ->previous 1

git reset --> to reset multiple files
git reset HEAD~1 --> previous commit will be reseted,HEAD -> current commit,~1 ->previous 1
git checkout -- filename ---> to undo the changes
git checkout -- . -->to undo all files

git stash --> to keep the changes but not want to commit
git stash pop --> to bring the changes back
git stash clear -->to remove the uncommit/temp holding changes

fork in github used to make a copy of another repos under our repo-->rough copy
untick "create master only" option will copy whole project

git push origin master1 -f -->force push if commit is not in github

-->origin means github repo link whose name can be changable -->master1 is branch name

git fetch --all --prune-->this is  used to fetch all changes done in branch into main(prune - deleted also)

git pull upstream main - this will do the same as the above two commands-pull the data from upstream project in local only and
we need to push it again to main of our branch to github inorder to keep it updated in both local and github

git add .;git commit -m "msg" -->we can concatenate 2 commands using ; working in linux

git rebase -i <previous commit> from which u want to add the changes

git add .
git commit -m "version 1" --amend  ->this will amend/overwrite the changes to the previous version/commit instead of creating a new commit

reset will move changes from staging to unstage area
checkout --   will move the file back to normal state(unchanged version)

how to add/select multiple specific files in add stage?--git add -i  -->select option 2 and select required files and press enter it will automatically add the file just check status
how to move to recent HEAD again?u can use git checkout commit -->to switch between HEAD and to return to origin al head git cheeckout <original_branchname>

to move backwards in remote for n commits as per local/to match local commit with remote but remote is somewhat forward

git reset --hard HEAD~2(for exMPLE 2 COMMITS BACK)

git push -f origin branch name

temp commit
git checkout -b dummy
git commit -a -m"temp_det"-->-a commit only existing file modified not new file(untracked),if -a used no need to use git add automatically stage



local commited how to reset back --git reset --hard commit hash
rebase,fetch,tag - doubts,git pull
https://linuxhint.com/howto_git_rebase/
rebase is done when master branch is having any new commits than branch,when branch was created before doing changes in master at that time we need
to do rebase from branch so all changes in master we can get in branch and subsequent commits in branch will also change,

pull we can do when we are going to create a new branch from master at first,after branch created we can only use rebase

how to see the changes in the file in git? --->git diff

git fetch + git merge = git pull
fetch only get info abt the commits that is added newly in remote(metadata)
pull will download data


